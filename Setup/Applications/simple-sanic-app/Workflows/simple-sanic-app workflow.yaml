harnessApiVersion: '1.0'
type: CANARY
envName: simple-sanic-app environment
failureStrategies:
- executionScope: WORKFLOW
  failureTypes:
  - APPLICATION_ERROR
  repairActionCode: ROLLBACK_WORKFLOW
  retryCount: 0
notificationRules:
- conditions:
  - FAILED
  executionScope: WORKFLOW
  notificationGroupAsExpression: false
  notificationGroups:
  - Account Administrator
  userGroupAsExpression: false
phases:
- type: KUBERNETES
  computeProviderName: gcp - eq-eval-harness project
  daemonSet: false
  infraMappingName: us-central1-a_standard-cluster-1 -GCP_Kubernetes--Google Cloud Platform- gcp - eq-eval-harness project- simple-sanic-app
  name: Phase 1
  phaseSteps:
  - type: CONTAINER_SETUP
    name: Setup Container
    steps:
    - type: KUBERNETES_SETUP
      name: Kubernetes Service Setup
      properties:
        serviceType: LoadBalancer
        releaseName: ${infra.kubernetes.infraId}
        ingressYaml: |-
          # Required placeholders: ${SERVICE_NAME} and ${SERVICE_PORT}
          # ---
          apiVersion: extensions/v1beta1
          kind: Ingress
          metadata:
            name: name-will-be-replaced
            annotations:
              ingress.kubernetes.io/rewrite-target: /
          spec:
            rules:
            - http:
               paths:
               - path: /path
                 backend:
                  serviceName: ${SERVICE_NAME}
                  servicePort: ${SERVICE_PORT}
        useIngress: false
        targetPort: 8000
        replicationControllerName: ${app.name}-${service.name}-${env.name}
        fixedInstances: '2'
        protocol: TCP
        istioConfig: null
        useIstioRouteRule: false
        port: 80
        desiredInstanceCount: fixedInstances
        maxInstances: 2
        resizeStrategy: RESIZE_NEW_FIRST
        serviceSteadyStateTimeout: 10
    - type: JIRA_CREATE_UPDATE
      name: Jira
      properties:
        issueType: Non-Code Task
        summary: Harness deploy test v1 w/ jira integration
        sweepingOutputScope: WORKFLOW
        jiraAction: CREATE_TICKET
        publishAsVar: true
        jiraConnectorId: jd0nN90RRY2F5uZz9RpPkQ
        project: SRE
        description: |
          This is test v1 to see how the Jira integration works in Harness. I also want to test out all the variables that exist.

          app.name = ${app.name}
          app.description = ${app.description}
          artifact.buildNo = ${artifact.buildNo}
          artifact.url = ${artifact.url}
          ${deploymentUrl}
          ${env.name}
          ${env.description}
          ${infra.kubernetes.namespace}
          ${instance.hostName}
          ${pipeline.name}
          ${service.name}
          ${service.description}
          ${workflow.name}
          ${workflow.lastGoodDeploymentDisplayName}
          ${workflow.lastGoodReleaseNo}
          ${workflow.startTs}
        priority: ''
        sweepingOutputName: jira
        labels:
        - harness
        - automation
    stepsInParallel: false
  - type: CONTAINER_DEPLOY
    name: Deploy Containers
    steps:
    - type: KUBERNETES_DEPLOY
      name: Upgrade Containers
      properties:
        commandName: Resize Replication Controller
        instanceUnitType: PERCENTAGE
        instanceCount: '50'
    stepsInParallel: false
  - type: VERIFY_SERVICE
    name: Verify Service
    steps:
    - type: DATA_DOG
      name: Datadog
      properties:
        hostnameTemplate: warm-transfer-scheduler-staging-v1-58f754cbf4-4fhsq
        analysisServerConfigId: hgxIDYykSyuKpn9cz61teQ
        analysisTolerance: LOW
        metrics: docker.cpu.throttled
        comparisonStrategy: COMPARE_WITH_PREVIOUS
        executeWithPreviousSteps: false
        timeDuration: '1'
    stepsInParallel: false
  - type: WRAP_UP
    name: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  serviceName: simple-sanic-app
  statefulSet: false
- type: KUBERNETES
  computeProviderName: gcp - eq-eval-harness project
  daemonSet: false
  infraMappingName: us-central1-a_standard-cluster-1 -GCP_Kubernetes--Google Cloud Platform- gcp - eq-eval-harness project- simple-sanic-app
  name: Phase 2
  phaseSteps:
  - type: CONTAINER_DEPLOY
    name: Deploy Containers
    steps:
    - type: KUBERNETES_DEPLOY
      name: Upgrade Containers
      properties:
        commandName: Resize Replication Controller
        instanceUnitType: PERCENTAGE
        instanceCount: '100'
    stepsInParallel: false
  - type: VERIFY_SERVICE
    name: Verify Service
    stepsInParallel: false
  - type: WRAP_UP
    name: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  serviceName: simple-sanic-app
  statefulSet: false
rollbackPhases:
- type: KUBERNETES
  computeProviderName: gcp - eq-eval-harness project
  daemonSet: false
  infraMappingName: us-central1-a_standard-cluster-1 -GCP_Kubernetes--Google Cloud Platform- gcp - eq-eval-harness project- simple-sanic-app
  name: Rollback Phase 1
  phaseNameForRollback: Phase 1
  phaseSteps:
  - type: CONTAINER_DEPLOY
    name: Deploy Containers
    phaseStepNameForRollback: Deploy Containers
    statusForRollback: SUCCESS
    steps:
    - type: KUBERNETES_DEPLOY_ROLLBACK
      name: Rollback Containers
    stepsInParallel: false
  - type: CONTAINER_SETUP
    name: Setup Container
    phaseStepNameForRollback: Setup Container
    statusForRollback: SUCCESS
    steps:
    - type: KUBERNETES_SETUP_ROLLBACK
      name: Rollback Kubernetes Setup
    stepsInParallel: false
  - type: VERIFY_SERVICE
    name: Verify Service
    phaseStepNameForRollback: Deploy Containers
    statusForRollback: SUCCESS
    stepsInParallel: false
  - type: WRAP_UP
    name: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  serviceName: simple-sanic-app
  statefulSet: false
- type: KUBERNETES
  computeProviderName: gcp - eq-eval-harness project
  daemonSet: false
  infraMappingName: us-central1-a_standard-cluster-1 -GCP_Kubernetes--Google Cloud Platform- gcp - eq-eval-harness project- simple-sanic-app
  name: Rollback Phase 2
  phaseNameForRollback: Phase 2
  phaseSteps:
  - type: CONTAINER_DEPLOY
    name: Deploy Containers
    phaseStepNameForRollback: Deploy Containers
    statusForRollback: SUCCESS
    steps:
    - type: KUBERNETES_DEPLOY_ROLLBACK
      name: Rollback Containers
    stepsInParallel: false
  - type: VERIFY_SERVICE
    name: Verify Service
    phaseStepNameForRollback: Deploy Containers
    statusForRollback: SUCCESS
    stepsInParallel: false
  - type: WRAP_UP
    name: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  serviceName: simple-sanic-app
  statefulSet: false
templatized: false
